import{bS as t,w as e,aG as o,I as a}from"./chunks/framework.CqaskQ-N.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"杂记/git/git.md","filePath":"杂记/git/git.md"}'),i={name:"杂记/git/git.md"},c=a('<h3 id="提交指定-commit-id" tabindex="-1"><strong>提交指定 commit ID</strong> <a class="header-anchor" href="#提交指定-commit-id" aria-label="Permalink to &quot;**提交指定 commit ID**&quot;">​</a></h3><p><code>git cherry-pick </code></p><ul><li>解決冲突，继续合入，用户解决代码冲突后，将修改的文件重新加入暂存区（git add .）然后执行git cherry-pick --continue继续合入操作跳过冲突，继续合入其他提交</li></ul><p>执行 <code>git cherry-pick --skip</code> 放弃合入，回退到操作前</p><p>执行 <code>git cherry-pick --abort</code> 退出合入，不回退到操作前</p><p>执行 <code>git cherry-pick --quit</code> 本地开发分支避免git push 修改太频繁</p><h3 id="修改最近一次提交" tabindex="-1"><strong>修改最近一次提交</strong> <a class="header-anchor" href="#修改最近一次提交" aria-label="Permalink to &quot;**修改最近一次提交**&quot;">​</a></h3><p>修改好文件    <code>git add . </code> 进入准备提交状态   <code> git commit --amend</code> 然后将pick改为edit    :wq保存    然后<code> git push -f</code> 强制推送</p><h3 id="修改指定某次commit提交记录" tabindex="-1"><strong>修改指定某次commit提交记录</strong> <a class="header-anchor" href="#修改指定某次commit提交记录" aria-label="Permalink to &quot;**修改指定某次commit提交记录**&quot;">​</a></h3><p><code>git rebase -i HEAD~[commit顺序号]</code>   将待修改的分支pick改为edit    :wq保存    <code>git add .</code> 提交修改文件  <code> git commit --amend</code> 合并记录    <code>git rebase --continue</code> 修改完成    <code>git push -f </code>强制推送</p><h3 id="将push的commit多次记录合并" tabindex="-1"><strong>将push的commit多次记录合并</strong> <a class="header-anchor" href="#将push的commit多次记录合并" aria-label="Permalink to &quot;**将push的commit多次记录合并**&quot;">​</a></h3><p><code>git rebase -i [commit合并顺序后一位序号]</code>    将需要合并的commit pick 改为 s 只保留一位pick记录    :wq保存    message注释只保留合并的commit    :wq保存    <code>git push -f</code> 强制推送</p><h3 id="取消合并" tabindex="-1"><strong>取消合并</strong> <a class="header-anchor" href="#取消合并" aria-label="Permalink to &quot;**取消合并**&quot;">​</a></h3><p><code>git merge --abort</code></p><h3 id="删除分支" tabindex="-1"><strong>删除分支</strong> <a class="header-anchor" href="#删除分支" aria-label="Permalink to &quot;**删除分支**&quot;">​</a></h3><p>远程：<code>git push origin -d 分支名</code></p><p>本地：<code>git branch -d 分支名</code></p><h3 id="回滚" tabindex="-1"><strong>回滚</strong> <a class="header-anchor" href="#回滚" aria-label="Permalink to &quot;**回滚**&quot;">​</a></h3><ul><li>回滚 reset删除文件、revert产生新的commit提交</li></ul><p>回滚到指定版本(强覆盖) <code>git reset --hard commit_id </code></p><p>回退到指定版本(会保留代码,需要解决合并) <code>git revert -n commit_id </code></p><h3 id="扩展" tabindex="-1"><strong>扩展</strong> <a class="header-anchor" href="#扩展" aria-label="Permalink to &quot;**扩展**&quot;">​</a></h3><h4 id="合并两个仓库代码-http-t-zoukankan-com-zhanqing-p-15330203-html" tabindex="-1">合并两个仓库代码 <a href="http://t.zoukankan.com/zhanqing-p-15330203.html" target="_blank" rel="noreferrer">http://t.zoukankan.com/zhanqing-p-15330203.html</a> <a class="header-anchor" href="#合并两个仓库代码-http-t-zoukankan-com-zhanqing-p-15330203-html" aria-label="Permalink to &quot;合并两个仓库代码 &lt;http://t.zoukankan.com/zhanqing-p-15330203.html&gt;&quot;">​</a></h4>',23),r=[c];function d(n,h,m,s,p,l){return o(),e("div",null,r)}const k=t(i,[["render",d]]);export{u as __pageData,k as default};
