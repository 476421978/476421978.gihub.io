import{bS as a,w as s,J as i,I as e,cY as t,cZ as r,c_ as l,c$ as n,d0 as d,aG as o}from"./chunks/framework.CqaskQ-N.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"后端/redis/集群.md","filePath":"后端/redis/集群.md"}'),c={name:"后端/redis/集群.md"},p=e(`<h2 id="redis集群模式" tabindex="-1">Redis集群模式 <a class="header-anchor" href="#redis集群模式" aria-label="Permalink to &quot;Redis集群模式&quot;">​</a></h2><h3 id="安装redis" tabindex="-1">安装redis <a class="header-anchor" href="#安装redis" aria-label="Permalink to &quot;安装redis&quot;">​</a></h3><p><a href="https://redis.io/download" target="_blank" rel="noreferrer">https://redis.io/download</a> redis-server 在官网下载包中的src文件中获取</p><h3 id="_7000中的-redis-conf-配置文件" tabindex="-1">7000中的 redis.conf 配置文件 <a class="header-anchor" href="#_7000中的-redis-conf-配置文件" aria-label="Permalink to &quot;7000中的 redis.conf 配置文件&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>port 7000</span></span>
<span class="line"><span>cluster-enabled yes</span></span>
<span class="line"><span>cluster-config-file nodes.conf</span></span>
<span class="line"><span>cluster-node-timeout 5000</span></span>
<span class="line"><span>appendonly yes</span></span></code></pre></div><ul><li>同理复制 port 7000~7005 一一对应</li></ul><h3 id="运行redis" tabindex="-1">运行redis <a class="header-anchor" href="#运行redis" aria-label="Permalink to &quot;运行redis&quot;">​</a></h3><ul><li>cd 7000</li><li>../redis-server ./redis.conf</li></ul><h3 id="创建集群命令" tabindex="-1">创建集群命令 <a class="header-anchor" href="#创建集群命令" aria-label="Permalink to &quot;创建集群命令&quot;">​</a></h3><p>Redis Cluster 在5.0之后取消了ruby脚本 <strong>redis-trib.rb</strong>的支持（手动命令行添加集群的方式不变），集合到redis-cli里，避免了再安装ruby的相关环境。直接使用redis-clit的参数--cluster 来取代</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>redis-cli --cluster create 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 --cluster-replicas 1</span></span></code></pre></div><ul><li>显示集群状态 <img src="`+t+'"></li></ul><p>7000 7001 7002 是主节点，7003 7004 7005是从节点</p><h3 id="测试集群-set-get-key" tabindex="-1">测试集群，set/get key <a class="header-anchor" href="#测试集群-set-get-key" aria-label="Permalink to &quot;测试集群，set/get key&quot;">​</a></h3><img src="'+r+'"><h3 id="工具尝试连接一个端口7000查看key、检查下redis运行端口状态" tabindex="-1">工具尝试连接一个端口7000查看key、检查下redis运行端口状态 <a class="header-anchor" href="#工具尝试连接一个端口7000查看key、检查下redis运行端口状态" aria-label="Permalink to &quot;工具尝试连接一个端口7000查看key、检查下redis运行端口状态&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>kill 81530 #kill 掉7000 节点</span></span></code></pre></div><img src="'+l+'"><h3 id="再查看状态" tabindex="-1">再查看状态 <a class="header-anchor" href="#再查看状态" aria-label="Permalink to &quot;再查看状态&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>redis-cli --cluster check 127.0.0.1:7001</span></span></code></pre></div><img src="'+n+'">',21),h=e('<h3 id="添加新节点-7006" tabindex="-1">添加新节点 7006 <a class="header-anchor" href="#添加新节点-7006" aria-label="Permalink to &quot;添加新节点 7006&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>  redis-cli --cluster add-node 127.0.0.1:7006 127.0.0.1:7000</span></span></code></pre></div><p>分配槽点</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>  redis-cli --cluster reshard 127.0.0.1:7000</span></span></code></pre></div><p>四个主节点，槽点16384 / 4 = 4096</p><p>如果我们不打算从特定的节点上取出指定数量的哈希槽， 那么可以向 redis-trib 输入 all ， 这样的话， 集群中的所有主节点都会成为源节点， redis-trib 将从各个源节点中各取出一部分哈希槽， 凑够 4096 个， 然后移动到7006节点上; 输入all，将会开始迁移 重新分配槽点后</p><img src="'+d+'">',7);function u(_,b,g,k,m,v){return o(),s("div",null,[p,i(" 7005替代了7000成为主接口 重启7000端口会成为从节点 "),h])}const q=a(c,[["render",u]]);export{y as __pageData,q as default};
