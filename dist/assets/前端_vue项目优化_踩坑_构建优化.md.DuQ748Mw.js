import{bS as a,w as e,aG as t,I as r,cl as i,cm as o,cn as s,co as l,cp as n,cq as c,cr as p,cs as u,ct as h,cu as d,cv as b,cw as g,cx as m}from"./chunks/framework.CqaskQ-N.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"前端/vue项目优化&踩坑/构建优化.md","filePath":"前端/vue项目优化&踩坑/构建优化.md"}'),f={name:"前端/vue项目优化&踩坑/构建优化.md"},k=r('<h2 id="webpack-配置优化" tabindex="-1">webpack 配置优化 <a class="header-anchor" href="#webpack-配置优化" aria-label="Permalink to &quot;webpack 配置优化&quot;">​</a></h2><table><thead><tr><th>工具</th><th style="text-align:center;">版本</th></tr></thead><tbody><tr><td>node</td><td style="text-align:center;">v12</td></tr><tr><td>vue</td><td style="text-align:center;">2.6</td></tr><tr><td>vue-cli</td><td style="text-align:center;">v3</td></tr></tbody></table><h2 id="构建代码混淆优化-webpack-obfuscator" tabindex="-1">构建代码混淆优化 webpack-obfuscator <a class="header-anchor" href="#构建代码混淆优化-webpack-obfuscator" aria-label="Permalink to &quot;构建代码混淆优化 webpack-obfuscator&quot;">​</a></h2><h3 id="vue-config-js-文件" tabindex="-1">vue.config.js 文件 <a class="header-anchor" href="#vue-config-js-文件" aria-label="Permalink to &quot;vue.config.js 文件&quot;">​</a></h3><p><a href="https://github.com/javascript-obfuscator/webpack-obfuscator" target="_blank" rel="noreferrer">git 地址</a></p><img src="'+i+'"><h3 id="版本兼容" tabindex="-1">版本兼容 <a class="header-anchor" href="#版本兼容" aria-label="Permalink to &quot;版本兼容&quot;">​</a></h3><img src="'+o+'"><blockquote><p>webpack4 最高使用版本<code>webpack-obfuscator@2.6.0</code></p></blockquote><h3 id="找不到模块" tabindex="-1">找不到模块 <a class="header-anchor" href="#找不到模块" aria-label="Permalink to &quot;找不到模块&quot;">​</a></h3><img src="'+s+`"><blockquote><p>Javascript-obfuscator 是对等依赖，所以必须手动安装 <a href="https://www.npmjs.com/package/javascript-obfuscator" target="_blank" rel="noreferrer">https://www.npmjs.com/package/javascript-obfuscator</a></p></blockquote><h3 id="package-json-文件" tabindex="-1">package.json 文件 <a class="header-anchor" href="#package-json-文件" aria-label="Permalink to &quot;package.json 文件&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&quot;terser-webpack-plugin&quot;: &quot;^4.2.3&quot; // 压缩代码</span></span>
<span class="line"><span>&quot;webpack-obfuscator&quot;: &quot;^2.6.0&quot; // 混淆</span></span>
<span class="line"><span>&quot;javascript-obfuscator&quot;: &quot;^2.19.0&quot;</span></span></code></pre></div><p><a href="https://www.cnblogs.com/dragonir/p/14445767.html" target="_blank" rel="noreferrer">参考文章</a></p><h2 id="gzip-压缩优化" tabindex="-1">GZIP 压缩优化 <a class="header-anchor" href="#gzip-压缩优化" aria-label="Permalink to &quot;GZIP 压缩优化&quot;">​</a></h2><h3 id="vue-config-js" tabindex="-1">vue.config.js <a class="header-anchor" href="#vue-config-js" aria-label="Permalink to &quot;vue.config.js&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>const  productionGzipExtensionsc  = [&#39;js&#39;, &#39;css&#39;]; //压缩的文件类型</span></span>
<span class="line"><span>const  compressionWebpackPlugin  =  require(&#39;compression-webpack-plugin&#39;); //引入插件</span></span></code></pre></div><img src="`+l+'"><ul><li>注释：configureWebpack：配置 webpack 相关的属性</li><li>output: build 打包输出文件名称</li><li><a href="https://webpack.docschina.org/api/module-methods" target="_blank" rel="noreferrer">参考官网</a> <img src="'+n+'"> 懒加载路由后分组[webpackChunkName 一致] - 时间戳：timestamp</li><li>webpack-bundle-analyzer：build 目录结构分析</li><li>错误： Building for production... ERROR TypeError: Cannot read property &#39;tapPromise&#39; of undefined TypeError: Cannot read property &#39;tapPromise&#39; of undefined &gt; 将版本改为&quot;compression-webpack-plugin&quot;: &quot;^5.0.0&quot;,重新安装</li></ul><h3 id="浏览器-f12-控制台查看是否压缩成功等字段" tabindex="-1">浏览器 f12 控制台查看是否压缩成功等字段 <a class="header-anchor" href="#浏览器-f12-控制台查看是否压缩成功等字段" aria-label="Permalink to &quot;浏览器 f12 控制台查看是否压缩成功等字段&quot;">​</a></h3><img src="'+c+'"><ul><li>压缩类型 Content-Encoding</li><li>缓存 Cache-Control</li></ul><h3 id="nginx-配置" tabindex="-1">nginx 配置 <a class="header-anchor" href="#nginx-配置" aria-label="Permalink to &quot;nginx 配置&quot;">​</a></h3><ul><li><p><a href="https://www.nginx.cn/doc/standard/httpgzip.html" target="_blank" rel="noreferrer">参考地址</a></p></li><li><p>压缩文件 gzip on; gzip_min_length 1024; gzip_comp_level 6; gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png; gzip_vary on;</p><ul><li>注意 application/javascript 压缩 web 的 js 文件</li></ul></li></ul><h3 id="vue-config-js-1" tabindex="-1">vue.config.js <a class="header-anchor" href="#vue-config-js-1" aria-label="Permalink to &quot;vue.config.js&quot;">​</a></h3><h2 id="构建速度优化" tabindex="-1">构建速度优化 <a class="header-anchor" href="#构建速度优化" aria-label="Permalink to &quot;构建速度优化&quot;">​</a></h2><h3 id="vue-config-js-2" tabindex="-1">vue.config.js <a class="header-anchor" href="#vue-config-js-2" aria-label="Permalink to &quot;vue.config.js&quot;">​</a></h3><img src="'+p+'"><ul><li>speed-mesure-webpack-plugin：测量各个插件和 loader 所花费的时间</li><li>webpack-bundle-analyzer：代码构建目录结构分析</li><li>hard-source-webpack-plugin：为模块提供中间缓存</li><li><a href="https://cli.vuejs.org/zh/config/#vue-config-js" target="_blank" rel="noreferrer">配置目录参考</a></li><li><a href="https://cli.vuejs.org/zh/guide/webpack.html" target="_blank" rel="noreferrer">简单配置参考</a></li></ul><h3 id="第一次构建" tabindex="-1">第一次构建 <a class="header-anchor" href="#第一次构建" aria-label="Permalink to &quot;第一次构建&quot;">​</a></h3><img src="'+u+'"><ul><li>36s [webpack-bundle-analyzer]</li></ul><h3 id="第二次构建" tabindex="-1">第二次构建 <a class="header-anchor" href="#第二次构建" aria-label="Permalink to &quot;第二次构建&quot;">​</a></h3><img src="'+h+'"><ul><li>[speed-mesure-webpack-plugin + webpack-bundle-analyzer] 35s</li></ul><h3 id="第三次构建" tabindex="-1">第三次构建 <a class="header-anchor" href="#第三次构建" aria-label="Permalink to &quot;第三次构建&quot;">​</a></h3><img src="'+d+'"><ul><li>[speed-mesure-webpack-plugin + hard-source-webpack-plugin + webpack-bundle-analyzer] 7s</li></ul><p><a href="https://segmentfault.com/a/1190000022205477" target="_blank" rel="noreferrer">参考文章</a></p><h2 id="按需引入" tabindex="-1">按需引入 <a class="header-anchor" href="#按需引入" aria-label="Permalink to &quot;按需引入&quot;">​</a></h2><h3 id="转译文件" tabindex="-1">转译文件 <a class="header-anchor" href="#转译文件" aria-label="Permalink to &quot;转译文件&quot;">​</a></h3><img src="'+b+'"><h3 id="第三方模块" tabindex="-1">第三方模块 <a class="header-anchor" href="#第三方模块" aria-label="Permalink to &quot;第三方模块&quot;">​</a></h3><img src="'+g+'"><h3 id="cnd-引入" tabindex="-1">CND 引入 <a class="header-anchor" href="#cnd-引入" aria-label="Permalink to &quot;CND 引入&quot;">​</a></h3><img src="'+m+'">',47),_=[k];function q(v,w,x,j,P,y){return t(),e("div",null,_)}const T=a(f,[["render",q]]);export{C as __pageData,T as default};
